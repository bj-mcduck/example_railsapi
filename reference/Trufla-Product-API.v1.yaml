openapi: 3.0.0
info:
  title: Trufla Product API
  version: '1.0'
  contact:
    name: Brandon McKay
  description: The most ground breaking API to list all Trufla Products
servers:
  - url: 'http://localhost:3000'
paths:
  /products:
    get:
      summary: Your GET endpoint
      tags:
        - Products
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
              examples:
                default:
                  value:
                    products:
                      - id: 2
                        name: Inside Out
                        price: '37.5'
                        department:
                          id: 12
                          name: 'Health & Computers'
                        promotions:
                          - id: 5
                            active: true
                            code: ARTISAN_CHAMBRAY
                            discount: '0.783044057192603'
                    pagination:
                      total_records: 1
                      current_offset: 0
                      next_offset: null
                      limit: 20
      operationId: get-products
      description: List and query all Products
      parameters:
        - schema:
            type: string
          in: query
          name: query
          description: Filters to Products that have a `name` that matches the provided string
        - schema:
            type: string
          in: query
          name: department_id
          description: Shows only those Products with the provided Department ID. Takes a comma separated list
          style: simple
        - schema:
            type: string
          in: query
          name: promo_code
          description: Filters to Products with the provided Promo code applied
        - schema:
            type: string
            enum:
              - department
              - promotions
          in: query
          name: include
          description: A comma separated string of the relationships you want to include in the response
          style: simple
          allowEmptyValue: true
          explode: true
components:
  schemas:
    Product:
      title: Product
      type: object
      properties:
        id:
          type: integer
        price:
          type: number
        department:
          $ref: '#/components/schemas/Department'
        promotions:
          type: array
          items:
            $ref: '#/components/schemas/Promotion'
      description: ''
    Department:
      title: Department
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Promotion:
      title: Promotion
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        active:
          type: boolean
        discount:
          type: number
    PaginatedProductList:
      title: PaginatedProductList
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        pagination:
          $ref: '#/components/schemas/Pagination'
    Pagination:
      title: Pagination
      type: object
      properties:
        total_records:
          type: integer
        current_offset:
          type: integer
        next_offset:
          type: integer
        limit:
          type: integer
tags:
  - name: Products
    description: All endpoints relating to operations for the Product model
